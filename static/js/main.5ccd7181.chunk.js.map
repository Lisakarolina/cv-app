{"version":3,"sources":["components/fields.js","components/mirror-fields.js","components/period-field.js","App.js","reportWebVitals.js","index.js"],"names":["Field","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateValue","bind","assertThisInitialized","inherits","createClass","key","value","e","action","target","fieldID","react_default","a","createElement","className","htmlFor","fieldLabel","type","id","onChange","Component","MirrorField","mirrorFieldLabel","toDisplay","PeriodField","uniqueID","Math","floor","random","state","_this2","setState","prev","defineProperty","concat","App","info","work","skills","additionalPeriodFields","submitIndicator","submitValues","updateInfo","updateWork","updateSkills","addNewPeriod","newData","updateState","prevState","newOne","assign","updateArray","console","log","_this3","toConsumableArray","period_field_PeriodField","arr","newItem","_step","_iterator","_createForOfIteratorHelper","s","n","done","item","keys","err","f","push","area","newdata","currentProps","objectSpread","nextProps","nextState","_this4","fields_Field","name","onClick","map","infoLabel","workObj","ind","toString","from","to","what","mirror_fields_MirrorField","mirrorFieldID","tools","languages","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.5ccd7181.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class Field extends Component {\n  constructor(props) {\n    super(props);\n    this.updateValue = this.updateValue.bind(this);\n  }\n\n  updateValue(e) {\n    this.props.action(e.target.value, this.props.fieldID);\n  }\n\n  render() {\n    return (\n      <div className=\"bundle\">\n        <label htmlFor={this.props.fieldID}>{this.props.fieldLabel}</label>\n        <input\n          type=\"text\"\n          id={this.props.fieldID}\n          onChange={this.updateValue}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport class MirrorField extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"mirror-bundle\">\n        <div>\n          {this.props.mirrorFieldLabel}: {this.props.toDisplay}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport class PeriodField extends Component {\n  constructor(props) {\n    super(props);\n    this.uniqueID = Math.floor(Math.random() * 100);\n    this.state = {};\n    this.updateValue = this.updateValue.bind(this);\n  }\n\n  updateValue(e) {\n    this.setState(\n      (prev) => ({\n        [`${e.target.id}`]: e.target.value,\n      }),\n      () => this.props.action({ [`${this.uniqueID}`]: this.state })\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <label htmlFor=\"from\">from</label>\n        <input type=\"text\" id=\"from\" onChange={this.updateValue} />\n        <label htmlFor=\"to\">until</label>\n        <input type=\"text\" id=\"to\" onChange={this.updateValue} />\n        <label htmlFor=\"content\">:</label>\n        <input type=\"text\" id=\"what\" onChange={this.updateValue} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Field } from \"./components/fields.js\";\nimport { MirrorField } from \"./components/mirror-fields.js\";\nimport { PeriodField } from \"./components/period-field.js\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      info: {},\n      work: [],\n      skills: [],\n      additionalPeriodFields: [],\n      submitIndicator: 0,\n    };\n    this.submitValues = this.submitValues.bind(this);\n    this.updateInfo = this.updateInfo.bind(this);\n    this.updateWork = this.updateWork.bind(this);\n    this.updateSkills = this.updateSkills.bind(this);\n    this.addNewPeriod = this.addNewPeriod.bind(this);\n  }\n\n  updateInfo(newData, id) {\n    this.updateState(\"info\", newData, id);\n  }\n\n  updateWork(newData) {\n    this.setState((prevState) => {\n      let newOne = Object.assign({}, prevState);\n      this.updateArray(newOne.work, newData);\n      return newOne;\n    });\n    console.log(this.state.work);\n  }\n\n  updateSkills(newData, id) {\n    this.updateState(\"skills\", newData, id);\n  }\n\n  addNewPeriod() {\n    this.setState((prev) => ({\n      additionalPeriodFields: [\n        ...prev.additionalPeriodFields,\n        <PeriodField action={this.updateWork} />,\n      ],\n    }));\n  }\n\n  updateArray(arr, newItem) {\n    for (let item of arr) {\n      if (Object.keys(item)[0] === Object.keys(newItem)[0]) {\n        item = Object.assign(item, newItem);\n        return;\n      }\n    }\n    arr.push(newItem);\n  }\n\n  submitValues() {\n    this.setState((prev) => {\n      return { submitIndicator: prev.submitIndicator + 1 };\n    });\n  }\n\n  updateState(area, newdata, id) {\n    this.setState((prevState, currentProps) => ({\n      [`${area}`]: { ...prevState[`${area}`], [`${id}`]: newdata },\n    }));\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.state.submitIndicator !== nextState.submitIndicator ||\n      this.state.additionalPeriodFields !== nextState.additionalPeriodFields\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <div id=\"container\">\n        <div id=\"leftSide\">\n          <h3>Personal Data</h3>\n          <Field fieldLabel=\"name\" fieldID=\"name\" action={this.updateInfo} />\n          <Field\n            fieldLabel=\"street\"\n            fieldID=\"street\"\n            action={this.updateInfo}\n          />\n          <Field fieldLabel=\"city\" fieldID=\"city\" action={this.updateInfo} />\n          <Field fieldLabel=\"phone\" fieldID=\"phone\" action={this.updateInfo} />\n          <h3 id=\"work-section\">Work Experience</h3>\n          <PeriodField action={this.updateWork} />\n          <PeriodField action={this.updateWork} />\n          <div>{this.state.additionalPeriodFields}</div>\n          <button\n            type=\"button\"\n            name=\"addWork\"\n            className=\"addPeriod\"\n            onClick={this.addNewPeriod}\n          >\n            &#10133;\n          </button>\n          <h3>Skills</h3>\n          <Field\n            fieldLabel=\"tools\"\n            fieldID=\"tools\"\n            action={this.updateSkills}\n          />\n          <Field\n            fieldLabel=\"languages\"\n            fieldID=\"languages\"\n            action={this.updateSkills}\n          />\n          <button\n            id=\"submit-button\"\n            type=\"button\"\n            name=\"submit\"\n            onClick={this.submitValues}\n          >\n            Submit\n          </button>\n        </div>\n        <div id=\"rightSide\">\n          <div id=\"cv-header\">\n            <h1>CV</h1>\n            <h2 id=\"lesser-title\">{this.state.info.name}</h2>\n          </div>\n          <div className=\"mirror-group\" id=\"mirror-personal\">\n            <h3>Personal Data</h3>\n            {Object.keys(this.state.info).map((infoLabel) => (\n              <div>{this.state.info[infoLabel]}</div>\n            ))}\n          </div>\n          <div className=\"mirror-group\" id=\"mirror-work\">\n            <h3>Work Experience</h3>\n            <ul>\n              {this.state.work.map((workObj, ind) => (\n                <li key={ind.toString()}>\n                  from {workObj[Object.keys(workObj)[0]].from} to{\" \"}\n                  {workObj[Object.keys(workObj)[0]].to} :{\" \"}\n                  {workObj[Object.keys(workObj)[0]].what}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"mirror-group\" id=\"mirror-skills\">\n            <h3>Skills</h3>\n          </div>\n          <MirrorField\n            mirrorFieldLabel=\"tools\"\n            mirrorFieldID=\"tools\"\n            toDisplay={this.state.skills.tools}\n          />\n          <MirrorField\n            mirrorFieldLabel=\"languages\"\n            mirrorFieldID=\"languages\"\n            toDisplay={this.state.skills.languages}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}